{"version":3,"sources":["App.js","index.js"],"names":["LOCAL_STORAGE_KEY","App","todoTextRef","useRef","useState","todos","setTodos","showCompleted","setShowCompleted","showDeleted","setShowDeleted","deletedTodos","setDeletedTodos","today","Date","displayDate","getDate","getMonth","getFullYear","currentTime","hours","getHours","getMinutes","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","className","style","color","ref","type","placeholder","onClick","e","text","current","value","time","prevTodos","id","now","status","window","confirm","removeItem","map","todo","checked","onChange","filter","item","target","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b49a282.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport './App.css'\nconst LOCAL_STORAGE_KEY = 'todoApp.todo'\n\nfunction App() {\n  const todoTextRef = useRef()\n  const [todos, setTodos] = useState([])\n  const [showCompleted, setShowCompleted] = useState(true)\n  const [showDeleted, setShowDeleted] = useState(true)\n\n  const [deletedTodos, setDeletedTodos] = useState([])\n  const today = new Date();\n  const displayDate = ((today.getDate() < 10)?\"0\":\"\") + today.getDate() + \"/\" + \n                      ((today.getMonth() < 10)?\"0\":\"\") + today.getMonth() + \"/\" +\n                      ((today.getFullYear() < 10)?\"0\":\"\") + today.getFullYear()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storedTodos) {\n      setTodos(storedTodos.todos)\n      setDeletedTodos(storedTodos.deletedTodos)\n    }\n  }, []) \n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify({todos, deletedTodos}))\n  }, [todos, deletedTodos])\n\n  function handleButtonClick(e) {\n    const text = todoTextRef.current.value\n    if (text === '') return\n    const time = currentTime()\n    setTodos(prevTodos => {\n      return[...prevTodos, {id: Date.now(), text: text, time: time, status: false}]\n    })\n    todoTextRef.current.value = null\n  }\n\n  function currentTime() {\n    const hours = today.getHours() \n    const hourValue = (hours < 10) & (hours > 0)\n    return(displayDate + \",  \" +\n     ( hourValue ?\"0\":\"\") + (today.getHours() === 0 ? 12 : (today.getHours() % 12))+ \":\" +\n     ((today.getMinutes() < 10)?\"0\":\"\") + today.getMinutes() + \" \"+\n     ((today.getHours() >= 12) ? \"PM\" : \"AM\")\n    )\n  }\n\n  function handleFreshPageClick() {\n    const confirmation = window.confirm(\"Click 'OK' if you really need a fresh list\")\n    if (confirmation) {\n    localStorage.removeItem(LOCAL_STORAGE_KEY)\n      setTodos([])\n      setDeletedTodos([])\n    }\n  }\n    \n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <div className=\"add-item\">\n          <h1 className=\"app-header\">TODO APP</h1>\n          <p className=\"greetings\">Hey Buddy, it's\n            <span style={{color: 'white'}}> {displayDate}</span>\n          </p>\n          <div className=\"input-form\">\n            <input ref={todoTextRef} type=\"text\" placeholder=\"&#9997;\" className=\"input-todo\"/>\n            <button className=\"btn-add\"\n                  onClick={ handleButtonClick }\n            >&#10133;</button>\n          </div>\n          <button className=\"fresh-btn\"onClick={handleFreshPageClick}>\n            Need a fresh List &#128214;\n          </button>\n        </div>\n\n        <div className=\"view-container\">    \n            \n{/*Completed todos here*/}\n          <div className=\"view-section\">\n            <h2 className=\"view-section-header\">Complete\n              <button onClick={()=> setShowCompleted(!showCompleted)}> &#128065;</button>\n            </h2>\n            {  \n              showCompleted ?\n                todos.map(todo=> {\n                  if (todo.status){\n                    return(\n                      <div key={todo.id} className=\"view-card\">\n                        <p style={\n                          {color: \"grey\"}\n                        }\n                        >{todo.text}</p>\n                        <p className=\"time\">completed on : {todo.time}</p>\n                      </div>\n                    )  \n                  }else {\n                    return null\n                  }\n\n                })\n              : \"\"\n            }\n          </div>\n\n{/* Active Todos here */}\n            <div className=\"view-section\">\n              <h2 className=\"view-section-header\">Active</h2>\n              {todos.map(todo=> {\n                if (!todo.status){\n                  return(\n                  <div key={todo.id} className=\"view-card\">\n                    <input type=\"checkbox\" checked={todo.status} onChange={(e)=> {\n                      const confirmation = window.confirm(\"Press 'Ok' if you complete it.\")\n                      if (confirmation) {\n                        setTodos(todos.filter(item=>{\n                          if (item.id === todo.id) {\n                            item.status = e.target.checked\n                            item.time = currentTime()\n                          }\n                          return item\n                        }))\n                      console.log(todo)\n                      }    \n                    }\n                    }/>\n                    <p>{todo.text}</p>\n                    <p className=\"time\">\n                      created on : {todo.time}\n                    </p>\n                    <button className=\"rmv-btn\" onClick={(e) => {\n                    setDeletedTodos([...deletedTodos, todo])\n                    setTodos(todos.filter(item=>{\n                      if (item.id !== todo.id) {\n                        return item\n                      }\n                      return null\n                    }))\n                  }\n                  }>&#10006;</button>\n                  </div>\n                )  \n                }\n                else {\n                  return null\n                }\n              })\n              }\n            </div>\n{/*Deleted todos are here*/}\n          <div className=\"view-section\">\n            <h2 className=\"view-section-header\">Delete\n              <button onClick={()=> setShowDeleted(!showDeleted)}> &#128065;</button>\n            </h2>\n            \n            { showDeleted ?\n                deletedTodos.map(todo=> {\n                  console.log(\"deleted todo\", todo)\n                    return(\n                      <div key={todo.id} className=\"view-card view-card-deleted\">\n                        <p className=\"restore-todo\" style={{color: \"#80FF00\"}} \n                          onClick={(e) =>{\n                          setTodos([...todos, todo])\n                          setDeletedTodos(deletedTodos.filter(item=>{\n                            if (item.id !== todo.id) {\n                              return item\n                            }\n                            return null\n                          }))\n                          }\n                          }\n                        >&#x27F2;</p>\n                        <p style={\n                          {color: \"white\"}\n                        }\n                        >{todo.text}</p>\n                        <p className=\"time \">deleted on : {todo.time}</p>\n                      </div>\n                    )  \n                })\n              : \"\"  \n            }\n          </div>\n          \n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}